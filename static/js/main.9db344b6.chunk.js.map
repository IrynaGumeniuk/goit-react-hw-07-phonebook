{"version":3,"sources":["App.module.css","components/ContactsList/ContactsList.module.css","redux/actions.js","redux/operations.js","redux/selectors.js","components/ContactsList/ContactsList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","redux/reducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","axios","defaults","baseURL","getContactsItems","state","contacts","items","getContactList","createSelector","filter","normalizedFilter","toLowerCase","contact","name","includes","ContactList","dispatch","useDispatch","useSelector","useEffect","actions","get","then","data","catch","error","message","className","s","ListTable","map","number","id","type","onClick","delete","deleteContact","ContactForm","useState","setName","setNumber","handleInputChange","e","currentTarget","value","Form","onSubmit","preventDefault","trim","existContact","find","isContactExist","alert","post","FormLabel","onChange","placeholder","required","btn","Filter","event","target","App","getContactsError","isLoading","loading","getContactsLoading","itemContactReducer","createReducer","payload","action","filtered","el","filterContactReducer","loadingContactReducer","errorContactReducer","combineReducers","store","configureStore","reducer","contactReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,IAAM,mB,mBCAxBD,EAAOC,QAAU,CAAC,UAAY,kC,wJCCjBC,EAAuBC,YAClC,iCAEWC,EAAuBD,YAClC,iCAEWE,EAAqBF,YAAa,+BAElCG,EAAqBH,YAAa,+BAClCI,EAAqBJ,YAAa,+BAClCK,EAAmBL,YAAa,6BAEhCM,EAAuBN,YAClC,iCAEWO,EAAuBP,YAClC,iCAEWQ,EAAqBR,YAAa,+BAElCS,EAAgBT,YAAa,yBCnB1CU,IAAMC,SAASC,QAAU,8EAElB,I,QCHMC,EAAmB,SAACC,GAAD,OAAWA,EAAMC,SAASC,OAK7CC,EAAiBC,YAC5B,CAACL,EAL8B,SAACC,GAAD,OAAWA,EAAMC,SAASI,UAMzD,SAACH,EAAOG,GACN,IAAMC,EAAmBD,EAAOE,cAEhC,OAAOL,EAAMG,QAAO,SAACG,GAAD,OAClBA,EAAQC,KAAKF,cAAcG,SAASJ,S,wBC8B3BK,EApCK,WAClB,IAAMC,EAAWC,cAEXZ,EAAWa,YAAYX,GAM7B,OAJAY,qBAAU,WACRH,GFR+B,SAACA,GAClCA,EAASI,KACTpB,IACGqB,IAAI,aACJC,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcP,EAASI,EAA6BG,OACzDC,OAAM,SAACC,GAAD,OAAWT,EAASI,EAA2BK,EAAMC,kBEI3D,CAACV,IAGF,uBAAOW,UAAWC,IAAEC,UAApB,SACE,gCACGxB,EAASyB,KAAI,gBAAGjB,EAAH,EAAGA,KAAMkB,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,GAAjB,OACZ,+BACE,6BAAKnB,IACL,6BAAKkB,IACL,6BACE,wBAAQE,KAAK,SAASC,QAAS,kBAAMlB,EFHtB,SAACgB,GAAD,OAAQ,SAAChB,GACpCA,EAASI,KACTpB,IACGmC,OADH,oBACuBH,IACpBV,MAAK,kBAAMN,EAASI,EAA6BY,OACjDR,OAAM,SAACC,GAAD,OAAWT,EAASI,EAA2BK,EAAMC,cEFJU,CAAcJ,KAA5D,wBAJKA,W,wBC4DJK,MA1Ef,WACE,IAAMrB,EAAWC,cACjB,EAAwBqB,mBAAS,IAAjC,mBAAOzB,EAAP,KAAa0B,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOP,EAAP,KAAeS,EAAf,KACMC,EAAoB,SAACC,GACzB,MAAwBA,EAAEC,cAAlB9B,EAAR,EAAQA,KAAM+B,EAAd,EAAcA,MAEd,OAAQ/B,GACN,IAAK,OACH0B,EAAQK,GACR,MACF,IAAK,SACHJ,EAAUI,GACV,MACF,QACE,SAIAvC,EAAWa,aAAY,SAACd,GAAD,OAAWD,EAAiBC,MA0BzD,OACE,uBAAMuB,UAAWC,IAAEiB,KAAMC,SAlBN,SAACJ,GAEpB,GADAA,EAAEK,iBACkB,KAAhBlC,EAAKmC,QAAmC,KAAlBjB,EAAOiB,OAAjC,CAIA,IH3BuBzB,EG2BjB0B,EAbe,WACrB,IAAMvC,EAAmBG,EAAKF,cAC9B,OAAON,EAAS6C,MACd,SAACtC,GAAD,OAAaA,EAAQC,KAAKF,gBAAkBD,KAUzByC,GACrB,GAAIF,EACFG,MAAM,GAAD,OAAIH,EAAapC,KAAjB,kCAGPG,GHhCuBO,EGgCH,CAAEV,OAAMkB,UHhCI,SAACf,GACnCA,EAASI,KACTpB,IACGqD,KAAK,YAAa9B,GAClBD,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcP,EAASI,EAA2BG,OACvDC,OAAM,SAACC,GAAD,OAAWT,EAASI,EAAyBK,EAAMC,gBG6B1Da,EAAQ,IACRC,EAAU,SAXRY,MAAM,qBAeR,UACE,uBAAOzB,UAAWC,IAAE0B,UAApB,SACE,uBACE3B,UAAU,aACVM,KAAK,OACLpB,KAAK,OACL+B,MAAO/B,EACP0C,SAAUd,EACVe,YAAY,gBACZC,UAAQ,MAGZ,uBAAO9B,UAAWC,IAAE0B,UAApB,SACE,uBACE3B,UAAU,aACVM,KAAK,OACLpB,KAAK,SACL+B,MAAOb,EACPwB,SAAUd,EACVe,YAAY,YACZC,UAAQ,MAGZ,wBAAQxB,KAAK,SAASN,UAAWC,IAAE8B,IAAnC,6BC5DSC,EAZA,WACb,IAAM3C,EAAWC,cAIjB,OACE,gCACE,uBAAOgB,KAAK,OAAOpB,KAAK,SAAS0C,SAJpB,SAACK,GAAD,OAAW5C,EAASjB,EAAc6D,EAAMC,OAAOjB,cCkBnDkB,I,MAAAA,EAjBf,WACE,IAAMrC,EAAQP,aAAY,SAACd,GAAD,OJJI,SAACA,GAAD,OAAWA,EAAMC,SAASoB,MIInBsC,CAAiB3D,MAChD4D,EAAY9C,aAAY,SAACd,GAAD,OJJE,SAACA,GAAD,OAAWA,EAAMC,SAAS4D,QIIjBC,CAAmB9D,MAC5D,OACE,sBAAKuB,UAAWC,IAAEkC,IAAlB,UACE,2CACA,cAAC,EAAD,IACA,0CACA,sDACA,cAAC,EAAD,IACCE,GAAa,4BAAI,iBACjBvC,GAAS,4BAAI,iCAAmCA,IACjD,cAAC,EAAD,Q,sBCHA0C,EAAqBC,YAAc,IAAD,mBACrC7E,EAAqB0C,MAAO,SAAC7B,EAAOgB,GAAR,OAAoBA,EAAQiD,WADnB,cAErC3E,EAAmBuC,MAAO,SAAC7B,EAAOkE,GAAR,4BAAuBlE,GAAvB,CAA8BkE,EAAOD,aAF1B,cAGrCxE,EAAqBoC,MAAO,SAAC7B,EAAOkE,GACnC,IAAMC,EAAWnE,EAAMK,QAAO,SAAC+D,GAAD,OAAQA,EAAGxC,KAAOsC,EAAOD,WACvD,OAAO,YAAIE,MALyB,IASlCE,EAAuBL,YAAc,GAAD,eACvCrE,EAAckC,MAAO,SAAC7B,EAAOkE,GAAR,OAAmBA,EAAOD,YAG5CK,EAAwBN,aAAc,GAAD,mBACxC/E,EAAqB4C,MAAO,kBAAM,KADM,cAExC1C,EAAqB0C,MAAO,kBAAM,KAFM,cAGxCzC,EAAmByC,MAAO,kBAAM,KAHQ,cAIxCxC,EAAmBwC,MAAO,kBAAM,KAJQ,cAKxCvC,EAAmBuC,MAAO,kBAAM,KALQ,cAMxCtC,EAAiBsC,MAAO,kBAAM,KANU,cAOxCrC,EAAqBqC,MAAO,kBAAM,KAPM,cAQxCpC,EAAqBoC,MAAO,kBAAM,KARM,cASxCnC,EAAmBmC,MAAO,kBAAM,KATQ,IAYrC0C,EAAsBP,YAAc,IAAD,mBACtC5E,EAAmByC,MAAO,SAAC7B,EAAOkE,GAAR,OAAmBA,EAAOD,WADd,cAEtC1E,EAAiBsC,MAAO,SAAC7B,EAAOkE,GAAR,OAAmBA,EAAOD,WAFZ,cAGtCvE,EAAmBmC,MAAO,SAAC7B,EAAOkE,GAAR,OAAmBA,EAAOD,WAHd,cAItChF,EAAqB4C,MAAO,iBAAM,MAJI,cAKtCxC,EAAmBwC,MAAO,iBAAM,MALM,cAMtCrC,EAAqBqC,MAAO,iBAAM,MANI,IAS1B2C,cAAgB,CAC7BtE,MAAO6D,EACP1D,OAAQgE,EACRR,QAASS,EACTjD,MAAOkD,IC3CME,EAPDC,YAAe,CAC3BC,QAAS,CACP1E,SAAU2E,GAEZC,UAAUC,ICDZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJS,SAASC,eAAe,U,kBCZ1BpG,EAAOC,QAAU,CAAC,KAAO,0BAA0B,UAAY,+BAA+B,UAAY,+BAA+B,IAAM,4B","file":"static/js/main.9db344b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListTable\":\"ContactsList_ListTable__2RRY0\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchContactsRequest = createAction(\n  \"contacts/fetchContactsRequest\"\n);\nexport const fetchContactsSuccess = createAction(\n  \"contacts/fetchContactsSuccess\"\n);\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\n\nexport const addContactsRequest = createAction(\"contacts/addContactsRequest\");\nexport const addContactsSuccess = createAction(\"contacts/addContactsSuccess\");\nexport const addContactsError = createAction(\"contacts/addContactsError\");\n\nexport const deleteContactRequest = createAction(\n  \"contacts/deleteContactRequest\"\n);\nexport const deleteContactSuccess = createAction(\n  \"contacts/deleteContactSuccess\"\n);\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\n\nexport const filterContact = createAction(\"contacts/changeFilter\");\n","import axios from \"axios\";\nimport * as actions from \"./actions\";\n\naxios.defaults.baseURL = \"https://6198e7e0164fa60017c23214.mockapi.io/api/goit-react-hw-07-phonebook/\";\n\nexport const fetchContacts = () => (dispatch) => {\n  dispatch(actions.fetchContactsRequest());\n  axios\n    .get(\"/contacts\")\n    .then(({ data }) => dispatch(actions.fetchContactsSuccess(data)))\n    .catch((error) => dispatch(actions.fetchContactsError(error.message)));\n};\n\nexport const addContact = (data) => (dispatch) => {\n  dispatch(actions.addContactsRequest());\n  axios\n    .post(\"/contacts\", data)\n    .then(({ data }) => dispatch(actions.addContactsSuccess(data)))\n    .catch((error) => dispatch(actions.addContactsError(error.message)));\n};\n\nexport const deleteContact = (id) => (dispatch) => {\n  dispatch(actions.deleteContactRequest());\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(actions.deleteContactSuccess(id)))\n    .catch((error) => dispatch(actions.deleteContactError(error.message)));\n};\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContactsItems = (state) => state.contacts.items;\nexport const getContactsFilter = (state) => state.contacts.filter;\nexport const getContactsError = (state) => state.contacts.error;\nexport const getContactsLoading = (state) => state.contacts.loading;\n\nexport const getContactList = createSelector(\n  [getContactsItems, getContactsFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return items.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { deleteContact, fetchContacts } from \"../../redux/operations\";\nimport { getContactList } from \"../../redux/selectors\";\nimport s from \"./ContactsList.module.css\";\nimport PropTypes from \"prop-types\";\nimport { useEffect } from \"react\";\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(getContactList);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <table className={s.ListTable}>\n      <tbody>\n        {contacts.map(({ name, number, id }) => (\n          <tr key={id}>\n            <td>{name}</td>\n            <td>{number}</td>\n            <td>\n              <button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n                delete\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default ContactList;\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addContact } from \"../../redux/operations\";\nimport { getContactsItems } from \"../../redux/selectors\";\nimport s from \"./ContactForm.module.css\";\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const handleInputChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const contacts = useSelector((state) => getContactsItems(state));\n\n  const isContactExist = () => {\n    const normalizedFilter = name.toLowerCase();\n    return contacts.find(\n      (contact) => contact.name.toLowerCase() === normalizedFilter\n    );\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name.trim() === \"\" || number.trim() === \"\") {\n      alert(\"Fill all fields!\");\n      return;\n    }\n    const existContact = isContactExist();\n    if (existContact) {\n      alert(`${existContact.name} is already in contacts.`);\n      return;\n    }\n    dispatch(addContact({ name, number }));\n\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={s.Form} onSubmit={handleSubmit}>\n      <label className={s.FormLabel}>\n        <input\n          className=\"Form-input\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          placeholder=\"Enter name...\"\n          required\n        />\n      </label>\n      <label className={s.FormLabel}>\n        <input\n          className=\"Form-input\"\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n          placeholder=\"Number...\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={s.btn}>Add contact</button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useDispatch } from \"react-redux\";\nimport { filterContact } from \"../../redux/actions\";\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const onFilter = (event) => dispatch(filterContact(event.target.value));\n\n  return (\n    <label>\n      <input type=\"text\" name=\"filter\" onChange={onFilter} />\n    </label>\n  );\n};\n\nexport default Filter;\n","import { useSelector } from \"react-redux\";\nimport s from \"./App.module.css\";\nimport ContactList from \"./components/ContactsList/ContactsList\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport { getContactsError, getContactsLoading } from \"./redux/selectors\";\n\nfunction App() {\n  const error = useSelector((state) => getContactsError(state));\n  const isLoading = useSelector((state) => getContactsLoading(state));\n  return (\n    <div className={s.App}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <p>Find contacts by name</p>\n      <Filter />\n      {isLoading && <p>{\" Loading... \"}</p>}\n      {error && <p>{\" Sorry, something goes wrong: \" + error}</p>}\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\n\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterContact,\n} from \"./actions.js\";\n\nconst itemContactReducer = createReducer([], {\n  [fetchContactsSuccess.type]: (state, actions) => actions.payload,\n  [addContactsSuccess.type]: (state, action) => [...state, action.payload],\n  [deleteContactSuccess.type]: (state, action) => {\n    const filtered = state.filter((el) => el.id !== action.payload);\n    return [...filtered];\n  },\n});\n\nconst filterContactReducer = createReducer(\"\", {\n  [filterContact.type]: (state, action) => action.payload,\n});\n\nconst loadingContactReducer = createReducer(false, {\n  [fetchContactsRequest.type]: () => true,\n  [fetchContactsSuccess.type]: () => false,\n  [fetchContactsError.type]: () => false,\n  [addContactsRequest.type]: () => true,\n  [addContactsSuccess.type]: () => false,\n  [addContactsError.type]: () => false,\n  [deleteContactRequest.type]: () => true,\n  [deleteContactSuccess.type]: () => false,\n  [deleteContactError.type]: () => false,\n});\n\nconst errorContactReducer = createReducer(\"\", {\n  [fetchContactsError.type]: (state, action) => action.payload,\n  [addContactsError.type]: (state, action) => action.payload,\n  [deleteContactError.type]: (state, action) => action.payload,\n  [fetchContactsRequest.type]: () => \"\",\n  [addContactsRequest.type]: () => \"\",\n  [deleteContactRequest.type]: () => \"\",\n});\n\nexport default combineReducers({\n  items: itemContactReducer,\n  filter: filterContactReducer,\n  loading: loadingContactReducer,\n  error: errorContactReducer,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport contactReducer from \"./reducers\";\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n  },\n  devTools: process.env.NODE_ENV !== \"production\",\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__Vd_-O\",\"FormLabel\":\"ContactForm_FormLabel__2SIlz\",\"FormInput\":\"ContactForm_FormInput__2aqf2\",\"btn\":\"ContactForm_btn__2Bpnz\"};"],"sourceRoot":""}